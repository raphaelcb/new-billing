pipeline {
	agent any

	tools {
		maven "maven-3.6.3"
		jdk "jdk11"
	}

	stages {
		stage('Checkout Source') {
			steps {
				git url:'https://bitbucket.cpqd.com.br/scm/cbtelser/new-billing.git', branch:'master'
			}
		}

		stage('Build Source') {
			steps {
				dir("/var/lib/jenkins/workspace/billing-auth/billing-auth") {
					sh 'mvn clean install'
				}
			}
		}

		stage('Build Docker App Image') {
			steps {
				script {
					dockerapp = docker.build("raphaelcb/billing-auth-app:${env.BUILD_ID}",
								'-f ./Docker/auth/billing-auth-app-jenkins.dockerfile .')
				}
			}
		}

		stage('Push Docker App Image') {
			steps {
				script {
					docker.withRegistry('https://registry.hub.docker.com', 'dockerhub') {
						dockerapp.push('latest')
						dockerapp.push("${env.BUILD_ID}")
					}
				}
			}
		}

		stage('Build Docker Database Image') {
			steps {
				script {
					dockerdatabase = docker.build("raphaelcb/billing-auth-database:${env.BUILD_ID}",
									 '-f ./Docker/auth/billing-auth-database-jenkins.dockerfile .')
				}
			}
		}

		stage('Push Docker Database Image') {
			steps {
				script {
					docker.withRegistry('https://registry.hub.docker.com', 'dockerhub') {
						dockerdatabase.push('latest')
						dockerdatabase.push("${env.BUILD_ID}")
					}
				}
			}
		}

		stage('Deploy Kubernetes') {
			agent {
				kubernetes {
					cloud 'kubernetes'
				}
			}
			environment {
				tag_version = "${env.BUILD_ID}"
			}
			steps {
				script {
					sh 'sed -i "s/{{tag}}/$tag_version/g" ./k8s/auth/jenkins/deployment-auth-jenkins.yaml'
					sh 'cat ./k8s/auth/jenkins/deployment-auth-jenkins.yaml'
					kubernetesDeploy(configs: '**/k8s/**', kubeconfigId: 'kubeconfig')
				}
			}
		}
	}
}